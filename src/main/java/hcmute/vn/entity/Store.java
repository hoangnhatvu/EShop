package hcmute.vn.entity;
// Generated Nov 17, 2022, 12:16:28 AM by Hibernate Tools 4.3.6.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Store generated by hbm2java
 */
@Entity
@Table(name = "Store", schema = "dbo", catalog = "EShop", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Store implements java.io.Serializable {

	private Integer id;
	private Users users;
	private String name;
	private String bio;
	private Integer staffIds;
	private Boolean isActive;
	private Boolean isOpen;
	private String avatar;
	private Integer rating;
	private BigDecimal EWallet;
	private Date createdAt;
	private Date updateAt;
	private Set<UserFollowStore> userFollowStores = new HashSet<UserFollowStore>(0);
	private Set<Orders> orderses = new HashSet<Orders>(0);
	private Set<Product> products = new HashSet<Product>(0);
	private Set<Cart> carts = new HashSet<Cart>(0);
	private StoreLevel storeLevel;
	private Set<Transactions> transactionses = new HashSet<Transactions>(0);

	public Store() {
	}

	public Store(Users users, String name, String bio) {
		this.users = users;
		this.name = name;
		this.bio = bio;
	}

	public Store(Users users, String name, String bio, Integer staffIds, Boolean isActive, Boolean isOpen,
			String avatar, Integer rating, BigDecimal EWallet, Date createdAt, Date updateAt,
			Set<UserFollowStore> userFollowStores, Set<Orders> orderses, Set<Product> products, Set<Cart> carts,
			StoreLevel storeLevel, Set<Transactions> transactionses) {
		this.users = users;
		this.name = name;
		this.bio = bio;
		this.staffIds = staffIds;
		this.isActive = isActive;
		this.isOpen = isOpen;
		this.avatar = avatar;
		this.rating = rating;
		this.EWallet = EWallet;
		this.createdAt = createdAt;
		this.updateAt = updateAt;
		this.userFollowStores = userFollowStores;
		this.orderses = orderses;
		this.products = products;
		this.carts = carts;
		this.storeLevel = storeLevel;
		this.transactionses = transactionses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ownerId", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "name", unique = true, nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "bio", nullable = false)
	public String getBio() {
		return this.bio;
	}

	public void setBio(String bio) {
		this.bio = bio;
	}

	@Column(name = "staffIds")
	public Integer getStaffIds() {
		return this.staffIds;
	}

	public void setStaffIds(Integer staffIds) {
		this.staffIds = staffIds;
	}

	@Column(name = "isActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "isOpen")
	public Boolean getIsOpen() {
		return this.isOpen;
	}

	public void setIsOpen(Boolean isOpen) {
		this.isOpen = isOpen;
	}

	@Column(name = "avatar", length = 100)
	public String getAvatar() {
		return this.avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	@Column(name = "rating")
	public Integer getRating() {
		return this.rating;
	}

	public void setRating(Integer rating) {
		this.rating = rating;
	}

	@Column(name = "e_wallet", precision = 10)
	public BigDecimal getEWallet() {
		return this.EWallet;
	}

	public void setEWallet(BigDecimal EWallet) {
		this.EWallet = EWallet;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "createdAt", length = 10)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updateAt", length = 10)
	public Date getUpdateAt() {
		return this.updateAt;
	}

	public void setUpdateAt(Date updateAt) {
		this.updateAt = updateAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<UserFollowStore> getUserFollowStores() {
		return this.userFollowStores;
	}

	public void setUserFollowStores(Set<UserFollowStore> userFollowStores) {
		this.userFollowStores = userFollowStores;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Orders> getOrderses() {
		return this.orderses;
	}

	public void setOrderses(Set<Orders> orderses) {
		this.orderses = orderses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Cart> getCarts() {
		return this.carts;
	}

	public void setCarts(Set<Cart> carts) {
		this.carts = carts;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "store")
	public StoreLevel getStoreLevel() {
		return this.storeLevel;
	}

	public void setStoreLevel(StoreLevel storeLevel) {
		this.storeLevel = storeLevel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Transactions> getTransactionses() {
		return this.transactionses;
	}

	public void setTransactionses(Set<Transactions> transactionses) {
		this.transactionses = transactionses;
	}

}
