package hcmute.vn.entity;
// Generated Nov 17, 2022, 12:16:28 AM by Hibernate Tools 4.3.6.Final

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "Product", schema = "dbo", catalog = "EShop", uniqueConstraints = @UniqueConstraint(columnNames = "slug"))
public class Product implements java.io.Serializable {

	private Integer id;
	private Store store;
	private Serializable name;
	private Serializable slug;
	private Serializable desciption;
	private BigDecimal price;
	private BigDecimal promotionalPrice;
	private int quantity;
	private Integer slod;
	private Boolean isActive;
	private Boolean isSelling;
	private Serializable listImage;
	private Integer categoryId;
	private Serializable styleValueIds;
	private Integer rating;
	private Date createAt;
	private Date updateAt;
	private Set<UserFollowProduct> userFollowProducts = new HashSet<UserFollowProduct>(0);
	private Set<CartItem> cartItems = new HashSet<CartItem>(0);
	private Set<OrderItem> orderItems = new HashSet<OrderItem>(0);

	public Product() {
	}

	public Product(Serializable name, Serializable desciption, BigDecimal price, BigDecimal promotionalPrice,
			int quantity) {
		this.name = name;
		this.desciption = desciption;
		this.price = price;
		this.promotionalPrice = promotionalPrice;
		this.quantity = quantity;
	}

	public Product(Store store, Serializable name, Serializable slug, Serializable desciption, BigDecimal price,
			BigDecimal promotionalPrice, int quantity, Integer slod, Boolean isActive, Boolean isSelling,
			Serializable listImage, Integer categoryId, Serializable styleValueIds, Integer rating, Date createAt,
			Date updateAt, Set<UserFollowProduct> userFollowProducts, Set<CartItem> cartItems,
			Set<OrderItem> orderItems) {
		this.store = store;
		this.name = name;
		this.slug = slug;
		this.desciption = desciption;
		this.price = price;
		this.promotionalPrice = promotionalPrice;
		this.quantity = quantity;
		this.slod = slod;
		this.isActive = isActive;
		this.isSelling = isSelling;
		this.listImage = listImage;
		this.categoryId = categoryId;
		this.styleValueIds = styleValueIds;
		this.rating = rating;
		this.createAt = createAt;
		this.updateAt = updateAt;
		this.userFollowProducts = userFollowProducts;
		this.cartItems = cartItems;
		this.orderItems = orderItems;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "storeId")
	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}

	@Column(name = "name", nullable = false)
	public Serializable getName() {
		return this.name;
	}

	public void setName(Serializable name) {
		this.name = name;
	}

	@Column(name = "slug", unique = true)
	public Serializable getSlug() {
		return this.slug;
	}

	public void setSlug(Serializable slug) {
		this.slug = slug;
	}

	@Column(name = "desciption", nullable = false)
	public Serializable getDesciption() {
		return this.desciption;
	}

	public void setDesciption(Serializable desciption) {
		this.desciption = desciption;
	}

	@Column(name = "price", nullable = false, precision = 10)
	public BigDecimal getPrice() {
		return this.price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	@Column(name = "promotionalPrice", nullable = false, precision = 10)
	public BigDecimal getPromotionalPrice() {
		return this.promotionalPrice;
	}

	public void setPromotionalPrice(BigDecimal promotionalPrice) {
		this.promotionalPrice = promotionalPrice;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "slod")
	public Integer getSlod() {
		return this.slod;
	}

	public void setSlod(Integer slod) {
		this.slod = slod;
	}

	@Column(name = "is_active")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "is_selling")
	public Boolean getIsSelling() {
		return this.isSelling;
	}

	public void setIsSelling(Boolean isSelling) {
		this.isSelling = isSelling;
	}

	@Column(name = "listImage")
	public Serializable getListImage() {
		return this.listImage;
	}

	public void setListImage(Serializable listImage) {
		this.listImage = listImage;
	}

	@Column(name = "categoryId")
	public Integer getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(Integer categoryId) {
		this.categoryId = categoryId;
	}

	@Column(name = "style_valueIds")
	public Serializable getStyleValueIds() {
		return this.styleValueIds;
	}

	public void setStyleValueIds(Serializable styleValueIds) {
		this.styleValueIds = styleValueIds;
	}

	@Column(name = "rating")
	public Integer getRating() {
		return this.rating;
	}

	public void setRating(Integer rating) {
		this.rating = rating;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "createAt", length = 10)
	public Date getCreateAt() {
		return this.createAt;
	}

	public void setCreateAt(Date createAt) {
		this.createAt = createAt;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updateAt", length = 10)
	public Date getUpdateAt() {
		return this.updateAt;
	}

	public void setUpdateAt(Date updateAt) {
		this.updateAt = updateAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<UserFollowProduct> getUserFollowProducts() {
		return this.userFollowProducts;
	}

	public void setUserFollowProducts(Set<UserFollowProduct> userFollowProducts) {
		this.userFollowProducts = userFollowProducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<CartItem> getCartItems() {
		return this.cartItems;
	}

	public void setCartItems(Set<CartItem> cartItems) {
		this.cartItems = cartItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<OrderItem> getOrderItems() {
		return this.orderItems;
	}

	public void setOrderItems(Set<OrderItem> orderItems) {
		this.orderItems = orderItems;
	}

}
