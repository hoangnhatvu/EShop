package hcmute.vn.entity;
// Generated Nov 17, 2022, 12:16:28 AM by Hibernate Tools 4.3.6.Final

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "Orders", schema = "dbo", catalog = "EShop")
@NamedQuery(name = "Orders.findAll", query = "SELECT d FROM Orders d")
public class Orders implements java.io.Serializable {

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	private int id;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "commission_id", nullable = false)
	private Commission commission;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "delivere_id", nullable = false)
	private Delivery delivery;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "store_id", nullable = false)
	private Store store;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	private Users users;
	@Column(name = "address", nullable = false)
	private String address;
	@Column(name = "phone", nullable = false)
	private int phone;
	@Column(name = "status", nullable = false)
	private int status;
	@Column(name = "id_paidBefore")
	private Boolean idPaidBefore;
	@Column(name = "amountFromUser", nullable = false, precision = 5)
	private int amountFromUser;
	@Column(name = "amountFromStore", nullable = false, precision = 5)
	private int amountFromStore;
	@Column(name = "amountToStore", nullable = false, precision = 5)
	private int amountToStore;
	@Column(name = "amountToGD", nullable = false, precision = 5)
	private int amountToGd;
	@Temporal(TemporalType.DATE)
	@Column(name = "createAt", length = 10)
	private Date createAt;
	@Temporal(TemporalType.DATE)
	@Column(name = "updateAt", length = 10)
	private Date updateAt;
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	private Set<OrderItem> orderItems = new HashSet<OrderItem>(0);

	public Orders() {
	}

	public Orders(Commission commission, Delivery delivery, Store store, Users users, String address, int phone,
			int status, int amountFromUser, int amountFromStore, int amountToStore,
			int amountToGd) {
		this.commission = commission;
		this.delivery = delivery;
		this.store = store;
		this.users = users;
		this.address = address;
		this.phone = phone;
		this.status = status;
		this.amountFromUser = amountFromUser;
		this.amountFromStore = amountFromStore;
		this.amountToStore = amountToStore;
		this.amountToGd = amountToGd;
	}

	public Orders(Commission commission, Delivery delivery, Store store, Users users, String address, int phone,
			int status, Boolean idPaidBefore, int amountFromUser, int amountFromStore,
			int amountToStore, int amountToGd, Date createAt, Date updateAt, Set<OrderItem> orderItems) {
		this.commission = commission;
		this.delivery = delivery;
		this.store = store;
		this.users = users;
		this.address = address;
		this.phone = phone;
		this.status = status;
		this.idPaidBefore = idPaidBefore;
		this.amountFromUser = amountFromUser;
		this.amountFromStore = amountFromStore;
		this.amountToStore = amountToStore;
		this.amountToGd = amountToGd;
		this.createAt = createAt;
		this.updateAt = updateAt;
		this.orderItems = orderItems;
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Commission getCommission() {
		return this.commission;
	}

	public void setCommission(Commission commission) {
		this.commission = commission;
	}

	public Delivery getDelivery() {
		return this.delivery;
	}

	public void setDelivery(Delivery delivery) {
		this.delivery = delivery;
	}

	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}

	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public int getPhone() {
		return this.phone;
	}

	public void setPhone(int phone) {
		this.phone = phone;
	}

	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	public Boolean getIdPaidBefore() {
		return this.idPaidBefore;
	}

	public void setIdPaidBefore(Boolean idPaidBefore) {
		this.idPaidBefore = idPaidBefore;
	}

	public int getAmountFromUser() {
		return this.amountFromUser;
	}

	public void setAmountFromUser(int amountFromUser) {
		this.amountFromUser = amountFromUser;
	}

	public int getAmountFromStore() {
		return this.amountFromStore;
	}

	public void setAmountFromStore(int amountFromStore) {
		this.amountFromStore = amountFromStore;
	}

	public int getAmountToStore() {
		return this.amountToStore;
	}

	public void setAmountToStore(int amountToStore) {
		this.amountToStore = amountToStore;
	}

	public int getAmountToGd() {
		return this.amountToGd;
	}

	public void setAmountToGd(int amountToGd) {
		this.amountToGd = amountToGd;
	}

	public Date getCreateAt() {
		return this.createAt;
	}

	public void setCreateAt(Date createAt) {
		this.createAt = createAt;
	}

	public Date getUpdateAt() {
		return this.updateAt;
	}

	public void setUpdateAt(Date updateAt) {
		this.updateAt = updateAt;
	}

	
	public Set<OrderItem> getOrderItems() {
		return this.orderItems;
	}

	public void setOrderItems(Set<OrderItem> orderItems) {
		this.orderItems = orderItems;
	}

}
